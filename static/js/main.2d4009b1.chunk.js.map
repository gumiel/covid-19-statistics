{"version":3,"sources":["components/atoms/TimelineCard.js","components/atoms/PieCard.js","components/atoms/InfoCard.js","components/organisms/AreaMultiplesPaises.js","components/atoms/SpecificArea.jsx","components/atoms/Timeline.jsx","components/organisms/AreaBolivia.js","components/atoms/GlobalAreaPie.jsx","components/organisms/AreaGlobal.jsx","components/pages/Estadisticas.js","App.js","index.js"],"names":["TimelineCard","nombrePais","alpha3Code","ctx","document","getElementById","useEffect","Axios","get","then","res","arregloFechaCasos","Object","keys","data","timeline","cases","map","d","arrayD","split","arregloDatosCasos","values","arregloDatosMuertes","deaths","arregloDatosRecuperaciones","recovered","config","type","labels","datasets","label","backgroundColor","window","chartColors","red","borderColor","fill","purple","green","options","responsive","title","display","text","country","scales","xAxes","yAxes","Chart","Body","id","PieCard","paisSeleccionado","ctx1","config1","blue","yellow","InfoCard","src","countryInfo","flag","heigth","width","alt","format","updated","todayCases","active","critical","AreaMultiplesPaises","useState","todayDeaths","casesPerOneMillion","deathsPerOneMillion","tests","testsPerOneMillion","affectedCountries","setPaisSeleccionado","paises","setPaises","my","col","defaultValue","className","onChange","e","pais","target","value","cambiandoPais","disabled","key","uuid","name","SpecificArea","myData","setMyData","ctx9","Timeline","AreaBolivia","GlobalAreaPie","props","chartRef","React","createRef","ref","this","dibujar","globalData","myChartRef","current","getContext","global_data","Component","AreaGlobal","prop","state","forEach","element","setState","Estadisticas","App","expand","light","bg","Brand","href","Toggler","navbar","Nav","mr","Item","Link","dropdown","dropdownToggle","Menu","Divider","inline","Input","placeholder","outline","success","orange","grey","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2d4009b1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Card } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Chart from \"chart.js\";\r\n\r\nexport const TimelineCard = ({ nombrePais, alpha3Code}) => {\r\n\r\n    let ctx = document.getElementById(\"myChart5\");\r\n\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (alpha3Code!==''){\r\n\r\n            // alert(alpha3Code);\r\n        \r\n            Axios.get(`https://corona.lmao.ninja/v2/historical/${alpha3Code}?lastdays=30`).then(res => {\r\n\r\n\r\n\r\n\r\n                \r\n\r\n\r\n                let arregloFechaCasos = Object.keys(res.data.timeline.cases);\r\n                arregloFechaCasos = arregloFechaCasos.map(function (d) {\r\n                    let arrayD = d.split('/');\r\n                    return arrayD[1] + '/' + arrayD[0] + '/' + arrayD[2];\r\n                });\r\n\r\n\r\n                let arregloDatosCasos = Object.values(res.data.timeline.cases);\r\n                let arregloDatosMuertes = Object.values(res.data.timeline.deaths);\r\n                let arregloDatosRecuperaciones = Object.values(res.data.timeline.recovered);\r\n\r\n                \r\n\r\n                var config = {\r\n                    type: 'line',\r\n                    data: {\r\n                        labels: arregloFechaCasos,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Casos',\r\n                                backgroundColor: window.chartColors.red,\r\n                                borderColor: window.chartColors.red,\r\n                                fill: false,\r\n                                data: arregloDatosCasos,\r\n                            },\r\n                            {\r\n                                label: 'Muertes',\r\n                                backgroundColor: window.chartColors.purple,\r\n                                borderColor: window.chartColors.purple,\r\n                                fill: false,\r\n                                data: arregloDatosMuertes,\r\n                            },\r\n                            {\r\n                                label: 'Recuperaciones',\r\n                                backgroundColor: window.chartColors.green,\r\n                                borderColor: window.chartColors.green,\r\n                                fill: false,\r\n                                data: arregloDatosRecuperaciones,\r\n                            },\r\n                        ]\r\n                    },\r\n                    options: {\r\n                        responsive: true,\r\n                        title: {\r\n                            display: true,\r\n                            text: `Linea de tiempo del covid en ${res.data.country}`\r\n                        },\r\n                        scales: {\r\n                            xAxes: [{\r\n                                display: true,\r\n                            }],\r\n                            yAxes: [{\r\n                                display: true,\r\n                                // type: 'logarithmic',\r\n                            }]\r\n                        }\r\n                    }\r\n                };\r\n\r\n                \r\n                \r\n                new Chart(ctx, config);\r\n\r\n\r\n            });\r\n        }else if(nombrePais===''){\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h5>Linea de tiempo de {nombrePais}</h5>\r\n                <div>\r\n                    <canvas id=\"myChart5\" />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Card } from 'bootstrap-4-react';\r\nimport Chart from \"chart.js\";\r\n\r\nconst PieCard = function({paisSeleccionado}){\r\n\r\n    \r\n\r\n    useEffect(function(){\r\n\r\n        let ctx1 = document.getElementById(\"myChart7\");\r\n\r\n        var config1 = {\r\n            type: 'pie',\r\n            data: {\r\n              datasets: [{\r\n                data: [\r\n                  paisSeleccionado.cases,\r\n                  paisSeleccionado.recovered,\r\n                  paisSeleccionado.deaths,\r\n                ],\r\n                backgroundColor: [\r\n                  window.chartColors.blue,\r\n                  window.chartColors.yellow,\r\n                  window.chartColors.red,\r\n                ],\r\n                label: 'Global'\r\n              }],\r\n              labels: [\r\n                'Casos '+ paisSeleccionado.cases,\r\n                'Recuperados '+ paisSeleccionado.recovered,\r\n                'Fallecidos '+ paisSeleccionado.deaths,\r\n              ]\r\n            },\r\n            options: {\r\n              responsive: true\r\n            }\r\n        };  \r\n          \r\n        new Chart(ctx1, config1);\r\n          \r\n\r\n    });\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <div>\r\n                    <canvas id=\"myChart7\" />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PieCard","import React from 'react'\r\nimport Moment from \"react-moment\";\r\nimport { Card } from 'bootstrap-4-react';\r\n\r\n\r\n\r\nconst InfoCard = ({paisSeleccionado}) =>{\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Body>\r\n          <h3>\r\n            Datos actuales de {paisSeleccionado.country}\r\n            <img\r\n              src={paisSeleccionado.countryInfo.flag}\r\n              heigth=\"30\"\r\n              width=\"30\"\r\n              alt={paisSeleccionado.country}\r\n            />\r\n          </h3>\r\n          <p>\r\n            Fecha de actualizacion:{\" \"}\r\n            <Moment format=\"DD/MM/YYYY\">{paisSeleccionado.updated}</Moment>\r\n          </p>\r\n          <p>\r\n            Casos nivel mundial: <b>{paisSeleccionado.cases}</b>\r\n          </p>\r\n          <p>\r\n            Total de recuperados: <b>{paisSeleccionado.recovered}</b>\r\n          </p>\r\n          <p>\r\n            Total de fallecidos: <b>{paisSeleccionado.deaths}</b>\r\n          </p>\r\n          <p>Casos del dia de hoy: {paisSeleccionado.todayCases}</p>\r\n          <p>Total de casos activos: {paisSeleccionado.active}</p>\r\n          <p>Casos criticos: {paisSeleccionado.critical}</p>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default InfoCard;","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport { TimelineCard } from '../atoms/TimelineCard';\r\nimport PieCard from '../atoms/PieCard';\r\nimport InfoCard from '../atoms/InfoCard';\r\nimport uuid from 'react-uuid'\r\n\r\nconst AreaMultiplesPaises = ()=>{\r\n\r\n    const [paisSeleccionado, setPaisSeleccionado] = useState({\r\n        updated: 0,\r\n        cases: 0,\r\n        todayCases: 0,\r\n        deaths: 0,\r\n        todayDeaths: 0,\r\n        recovered: 0,\r\n        active: 0,\r\n        critical: 0,\r\n        casesPerOneMillion: 0,\r\n        deathsPerOneMillion: 0,\r\n        tests: 0,\r\n        testsPerOneMillion: 0,\r\n        affectedCountries: 0,\r\n        country: '',\r\n        countryInfo:{},\r\n        alpha3Code:''\r\n    });\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [paises, setPaises] = useState([])\r\n\r\n    useEffect(()=>{\r\n        Axios.get(\"https://restcountries.eu/rest/v2/all\").then(res => {\r\n\r\n            setPaises(res.data);\r\n            \r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const cambiandoPais = (e)=>{\r\n        \r\n        let pais = e.target.value;\r\n\r\n        if(pais!==''){\r\n            Axios.get(\"https://corona.lmao.ninja/v2/countries/\" + pais).then(res => {\r\n    \r\n                setPaisSeleccionado({ ...res.data, alpha3Code: pais});\r\n                \r\n            });\r\n\r\n        }else{\r\n            setPaisSeleccionado({\r\n                updated: 0,\r\n                cases: 0,\r\n                todayCases: 0,\r\n                deaths: 0,\r\n                todayDeaths: 0,\r\n                recovered: 0,\r\n                active: 0,\r\n                critical: 0,\r\n                casesPerOneMillion: 0,\r\n                deathsPerOneMillion: 0,\r\n                tests: 0,\r\n                testsPerOneMillion: 0,\r\n                affectedCountries: 0,\r\n                country: '',\r\n                countryInfo:{},\r\n                alpha3Code:''\r\n            });\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>  \r\n            <Row my=\"md-3\">\r\n              <Col col=\"md-12\" text=\"center\">\r\n                <h2>Seleccione el pais</h2>\r\n              </Col>\r\n            </Row>\r\n            <Row my=\"md-3\">\r\n                <Col>\r\n                    \r\n                    <select defaultValue={'DEFAULT'}  className=\"form-control\" id=\"exampleFormControlSelect2\" onChange={(e) => { cambiandoPais(e) }}> \r\n                        <option value=\"DEFAULT\" disabled>Seleccione</option>\r\n                        {\r\n                        paises.map( pais => (\r\n                            <option key={uuid()} value={pais.alpha3Code} >{pais.name}</option>  \r\n                        ))\r\n                        }                        \r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <Row my=\"md-3\">\r\n                <Col col=\"md-4\">\r\n                    <InfoCard\r\n                    paisSeleccionado={paisSeleccionado}\r\n                    ></InfoCard>\r\n                </Col>\r\n                \r\n                <Col col=\"md-8\">\r\n                    <PieCard\r\n                        paisSeleccionado={paisSeleccionado} \r\n                    ></PieCard>\r\n                </Col>\r\n            </Row>\r\n            <Row my=\"md-3\">\r\n                <Col col=\"md-12\">\r\n                    <TimelineCard\r\n                        nombrePais={paisSeleccionado.country}\r\n                        alpha3Code={paisSeleccionado.alpha3Code}\r\n                    ></TimelineCard>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AreaMultiplesPaises;","import React, { useState, useEffect } from 'react';\r\nimport {Row, Col, Card, BH5} from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Chart from \"chart.js\";\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nconst SpecificArea = function(){\r\n\r\n  \r\n\r\n\r\n  // const [dataBarra, setDataBarra] = useState({\r\n  //   chartRef2 : React.createRef()\r\n  // });\r\n\r\n  const [myData, setMyData] = useState({\r\n    \"updated\": 1587044800696,\r\n    \"country\": \"\",\r\n    \"countryInfo\": {\r\n      \"_id\": 0,\r\n      \"iso2\": \"\",\r\n      \"iso3\": \"\",\r\n      \"lat\": 0,\r\n      \"long\": 0,\r\n      \"flag\": \"\"\r\n    },\r\n    \"cases\": 0,\r\n    \"todayCases\": 0,\r\n    \"deaths\": 0,\r\n    \"todayDeaths\": 0,\r\n    \"recovered\": 0,\r\n    \"active\": 0,\r\n    \"critical\": 0,\r\n    \"casesPerOneMillion\": 0,\r\n    \"deathsPerOneMillion\": 0,\r\n    \"tests\": 0,\r\n    \"testsPerOneMillion\": 0\r\n  });\r\n\r\n  useEffect(()=>{\r\n    Axios.get(\"https://corona.lmao.ninja/v2/countries/BOL\").then(res => {\r\n\r\n      setMyData(res.data);\r\n      \r\n      \r\n\r\n      // const myChartRef2 = dataBarra.chartRef2.current.getContext(\"2d\");\r\nlet ctx9 = document.getElementById(\"myChart231\");\r\n      \r\n      new Chart(ctx9, {\r\n        type: \"horizontalBar\",\r\n        data: {\r\n          labels: [\r\n            `Casos (${res.data.cases})`,\r\n            `Fallecidos (${res.data.deaths})`,\r\n            `Recuperados (${res.data.recovered})`,\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: [\"Bolivia\"],\r\n              data: [res.data.cases, res.data.deaths, res.data.recovered],\r\n              fill: false,\r\n              backgroundColor: [\r\n                window.chartColors.red,\r\n                window.chartColors.purple,\r\n                window.chartColors.green,\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n\r\n\r\n      \r\n\r\n    });\r\n  },[]);\r\n  \r\n  return (\r\n      <>\r\n        <Row my=\"md-3\">\r\n          <Col col=\"md-12\" text=\"center\">\r\n            <h2>Datos en Bolivia.</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row my=\"md-3\">\r\n          \r\n          <Col col=\"md-8\">\r\n            <Card>\r\n              <Card.Body>\r\n                <BH5>Cuadro de la fecha <Moment format=\"DD/MM/YYYY\">{myData.updated}</Moment> </BH5>\r\n                {/* <canvas id=\"myChart231\" ref={dataBarra.chartRef2} /> */}\r\n                <canvas id=\"myChart231\"  />\r\n              </Card.Body>\r\n            </Card>\r\n\r\n          </Col>\r\n          <Col col=\"md-4\">\r\n          <Card>\r\n            <Card.Body>\r\n                <p>Casos a nivel nacional: <b>{myData.cases}</b></p>\r\n                <p>Total de recuperados: <b>{myData.recovered}</b></p>\r\n                <p>Total de fallecidos: <b>{myData.deaths}</b></p>\r\n                <p>Casos del dia de hoy: {myData.todayCases}</p>\r\n                <p>Total de casos activos: {myData.active}</p>\r\n                <p>Casos criticos: {myData.critical}</p>\r\n            </Card.Body>\r\n          </Card>\r\n            \r\n          </Col>\r\n        </Row>\r\n      </>\r\n  );\r\n\r\n}\r\n\r\nexport default SpecificArea;    ","import React, { useEffect } from 'react';\r\nimport { Row, Col, Card } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Chart from \"chart.js\";\r\n\r\nconst Timeline = function(){\r\n\r\n    \r\n\r\n\r\n\r\n    useEffect(()=>{  \r\n\r\n        Axios.get(\"https://corona.lmao.ninja/v2/historical/BOL?lastdays=30\").then(res=>{ \r\n\r\n\r\n            let arregloFechaCasos = Object.keys(res.data.timeline.cases);\r\n            arregloFechaCasos = arregloFechaCasos.map(function(d) {\r\n                let arrayD = d.split('/');\r\n                return arrayD[1]+'/'+arrayD[0]+'/'+arrayD[2];\r\n            });\r\n\r\n\r\n            let arregloDatosCasos = Object.values(res.data.timeline.cases);\r\n            let arregloDatosMuertes = Object.values(res.data.timeline.deaths);\r\n            let arregloDatosRecuperaciones = Object.values(res.data.timeline.recovered);\r\n\r\n            \r\n            var config = {\r\n                type: 'line',\r\n                data: {\r\n                    labels: arregloFechaCasos,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Casos',\r\n                            backgroundColor: window.chartColors.red,\r\n                            borderColor: window.chartColors.red,\r\n                            fill: false,\r\n                            data: arregloDatosCasos,\r\n                        }, \r\n                        {\r\n                            label: 'Muertes',\r\n                            backgroundColor: window.chartColors.purple,\r\n                            borderColor: window.chartColors.purple,\r\n                            fill: false,\r\n                            data: arregloDatosMuertes,\r\n                        },\r\n                        {\r\n                            label: 'Recuperaciones',\r\n                            backgroundColor: window.chartColors.green,\r\n                            borderColor: window.chartColors.green,\r\n                            fill: false,\r\n                            data: arregloDatosRecuperaciones,\r\n                        },\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    title: {\r\n                        display: true,\r\n                        text: `Linea de tiempo del covid en ${res.data.country}`\r\n                    },\r\n                    scales: {\r\n                        xAxes: [{\r\n                            display: true,\r\n                        }],\r\n                        yAxes: [{\r\n                            display: true,\r\n                            // type: 'logarithmic',\r\n                        }]\r\n                    }\r\n                }\r\n            };\r\n            \r\n            let ctx = document.getElementById(\"myChart31\");\r\n            \r\n            new Chart(ctx, config);\r\n        \r\n        \r\n        });\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <Row>\r\n            <Col col=\"md-12\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <h5>Linea de tiempo de Bolivia</h5>\r\n                        <div>\r\n                            <canvas id=\"myChart31\" />\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Timeline;","import React from 'react'\r\nimport SpecificArea from '../atoms/SpecificArea';\r\nimport Timeline from '../atoms/Timeline';\r\n\r\nconst AreaBolivia = ()=>{\r\n\r\n    return (\r\n        <>\r\n            <SpecificArea></SpecificArea>\r\n            <Timeline></Timeline>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AreaBolivia;","import React, { Component } from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\n\r\nclass GlobalAreaPie extends Component{\r\n  \r\n  constructor(props){\r\n      super(props);\r\n  }\r\n    \r\n  chartRef = React.createRef();\r\n  \r\n  componentDidMount() {\r\n    \r\n\r\n    \r\n  }\r\n    \r\n  render() {\r\n\r\n    return (\r\n      <> \r\n        <canvas id=\"myChart\" ref={this.chartRef} />\r\n      </>\r\n    );\r\n\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    const config = this.dibujar(this.props.globalData);\r\n    \r\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n    new Chart(myChartRef, config);\r\n\r\n  }\r\n\r\n  dibujar(data){\r\n    \r\n    const global_data = data;\r\n\r\n    \r\n\r\n    const config = {\r\n      type: 'pie',\r\n      data: {\r\n        datasets: [{\r\n          data: [\r\n            global_data.cases,\r\n            global_data.recovered,\r\n            global_data.deaths,\r\n          ],\r\n          backgroundColor: [\r\n            window.chartColors.blue,\r\n            window.chartColors.yellow,\r\n            window.chartColors.red,\r\n          ],\r\n          label: 'Global'\r\n        }],\r\n        labels: [\r\n          'Casos '+ global_data.cases,\r\n          'Recuperados '+ global_data.recovered,\r\n          'Fallecidos '+ global_data.deaths,\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true\r\n      }\r\n    };\r\n    return config;\r\n  }\r\n\r\n}\r\n\r\nexport default GlobalAreaPie;","import React, { Component } from 'react';\r\nimport { Row, Col, Card } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Moment from \"react-moment\";\r\nimport GlobalAreaPie from '../atoms/GlobalAreaPie';\r\n\r\n\r\n\r\nclass AreaGlobal extends Component{\r\n\r\n    constructor(prop){\r\n        super(prop);\r\n\r\n        this.state = {\r\n          updated: 0,\r\n          cases: 0,\r\n          todayCases: 0,\r\n          deaths: 0,\r\n          todayDeaths: 0,\r\n          recovered: 0,\r\n          active: 0,\r\n          critical: 0,\r\n          casesPerOneMillion: 0,\r\n          deathsPerOneMillion: 0,\r\n          tests: 0,\r\n          testsPerOneMillion: 0,\r\n          affectedCountries: 0,\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n      Axios.get(\"https://corona.lmao.ninja/v2/continents\").then(res => {\r\n\r\n             \r\n\r\n        var updated= 0;\r\n        var cases= 0;\r\n        var todayCases= 0;\r\n        var deaths= 0;\r\n        var todayDeaths= 0;\r\n        var recovered= 0;\r\n        var active= 0;\r\n        var critical= 0;\r\n        var casesPerOneMillion= 0;\r\n        var deathsPerOneMillion= 0;\r\n        var tests= 0;\r\n        var testsPerOneMillion= 0;\r\n        var affectedCountries= 0;\r\n\r\n        res.data.forEach(element => {\r\n          updated = element.updated;\r\n          cases= cases+element.cases;\r\n          todayCases= todayCases+element.todayCases;\r\n          deaths= deaths+element.deaths;\r\n          todayDeaths= todayDeaths+element.todayDeaths;\r\n          recovered= recovered+element.recovered;\r\n          active= active+element.active;\r\n          critical= critical+element.critical;\r\n          casesPerOneMillion= casesPerOneMillion+element.casesPerOneMillion;\r\n          deathsPerOneMillion= deathsPerOneMillion+element.deathsPerOneMillion;\r\n          tests= tests+element.tests;\r\n          testsPerOneMillion= testsPerOneMillion+element.testsPerOneMillion;\r\n          affectedCountries= affectedCountries+element.affectedCountries;\r\n\r\n        }); \r\n        \r\n        this.setState({\r\n          'updated': updated,\r\n          'cases': cases,\r\n          'todayCases': todayCases,\r\n          'deaths': deaths,\r\n          'todayDeaths': todayDeaths,\r\n          'recovered': recovered,\r\n          'active': active,\r\n          'critical': critical,\r\n          'casesPerOneMillion': casesPerOneMillion,\r\n          'deathsPerOneMillion': deathsPerOneMillion,\r\n          'tests': tests,\r\n          'testsPerOneMillion': testsPerOneMillion,\r\n          'affectedCountries': affectedCountries,\r\n        });\r\n        \r\n      });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        return(\r\n          <>\r\n            <Row my=\"md-3\">\r\n              <Col text=\"center\">\r\n                <h2>Datos Globales.</h2>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row my=\"md-3\">\r\n              <Col col=\"md-4\">\r\n                <Card>\r\n                    <Card.Body>\r\n                    <h2>Datos nivel mundial.</h2>\r\n                    <p>Fecha de actualizacion: <Moment format=\"DD/MM/YYYY\">{this.state.updated}</Moment></p>\r\n                    <p>Casos nivel mundial: <b>{this.state.cases}</b></p>\r\n                    <p>Total de recuperados: <b>{this.state.recovered}</b></p>\r\n                    <p>Total de fallecidos: <b>{this.state.deaths}</b></p>\r\n                    <p>Casos del dia de hoy: {this.state.todayCases}</p>\r\n                    <p>Total de casos activos: {this.state.active}</p>\r\n                    <p>Casos criticos: {this.state.critical}</p>\r\n                    </Card.Body>\r\n                </Card>\r\n              \r\n              </Col>\r\n              <Col col=\"md-8\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <GlobalAreaPie globalData={this.state} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n          </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default AreaGlobal;","import React from \"react\";\r\nimport { Container } from 'bootstrap-4-react';\r\nimport AreaMultiplesPaises from \"../organisms/AreaMultiplesPaises\";\r\nimport AreaBolivia from \"../organisms/AreaBolivia\";\r\nimport AreaGlobal from \"../organisms/AreaGlobal\";\r\n\r\n\r\nconst Estadisticas = function(){\r\n\r\n    return (\r\n      <Container>\r\n        \r\n        <AreaGlobal></AreaGlobal>\r\n        \r\n        <AreaBolivia></AreaBolivia>\r\n        \r\n        <AreaMultiplesPaises></AreaMultiplesPaises>\r\n\r\n\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Estadisticas;","import React from \"react\";\r\nimport { Navbar, Nav, Button, Dropdown, Form, Collapse } from 'bootstrap-4-react';\r\nimport Estadisticas from \"./components/pages/Estadisticas\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Navbar expand=\"lg\" light bg=\"light\">\r\n        <Navbar.Brand href=\"#\">Navbar</Navbar.Brand>\r\n        <Navbar.Toggler target=\"#navbarSupportedContent\" />\r\n        <Collapse navbar id=\"navbarSupportedContent\">\r\n          <Navbar.Nav mr=\"auto\">\r\n            <Nav.Item active>\r\n              <Nav.Link href=\"#\">Home</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link href=\"#\">Link</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item dropdown>\r\n              <Nav.Link dropdownToggle>Dropdown</Nav.Link>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item>Action</Dropdown.Item>\r\n                <Dropdown.Item>Another action</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item>Something else</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link disabled>Disabled</Nav.Link>\r\n            </Nav.Item>\r\n          </Navbar.Nav>\r\n          <Form inline my=\"2 lg-0\">\r\n            <Form.Input type=\"search\" placeholder=\"Search\" mr=\"sm-2\" />\r\n            <Button outline success my=\"2 sm-0\">\r\n              Search\r\n            </Button>\r\n          </Form>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n      <Estadisticas></Estadisticas>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nwindow.chartColors = {\r\n  red: 'rgb(255, 99, 132)',\r\n  orange: 'rgb(255, 159, 64)',\r\n  yellow: 'rgb(255, 205, 86)',\r\n  green: 'rgb(75, 192, 192)',\r\n  blue: 'rgb(54, 162, 235)',\r\n  purple: 'rgb(153, 102, 255)',\r\n  grey: 'rgb(201, 203, 207)'\r\n};\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}