{"version":3,"sources":["components/atoms/TimelineCard.js","components/atoms/PieCard.js","components/atoms/InfoCard.js","components/organisms/AreaMultiplesPaises.js","components/atoms/SpecificArea.jsx","components/atoms/Timeline.jsx","components/organisms/AreaBolivia.js","components/atoms/GlobalAreaPie.jsx","components/organisms/AreaGlobal.jsx","components/pages/Estadisticas.js","components/pages/ComparadorPaises.js","App.js","index.js"],"names":["TimelineCard","nombrePais","alpha3Code","useState","chart","setChart","useEffect","Axios","get","then","res","arregloFechaCasos","Object","keys","data","timeline","cases","map","d","arrayD","split","arregloDatosCasos","values","arregloDatosMuertes","deaths","arregloDatosRecuperaciones","recovered","config","type","labels","datasets","label","backgroundColor","window","chartColors","red","borderColor","fill","purple","green","options","responsive","title","display","text","country","scales","xAxes","yAxes","hasOwnProperty","destroy","ctx","document","getElementById","Chart","Body","id","PieCard","paisSeleccionado","ctx1","config1","blue","yellow","InfoCard","src","countryInfo","flag","heigth","width","alt","format","updated","todayCases","active","critical","AreaMultiplesPaises","todayDeaths","casesPerOneMillion","deathsPerOneMillion","tests","testsPerOneMillion","affectedCountries","setPaisSeleccionado","paises","setPaises","my","col","defaultValue","className","onChange","e","pais","target","value","catch","error","response","status","alert","cambiandoPais","disabled","key","uuid","name","SpecificArea","myData","setMyData","ctx9","Timeline","AreaBolivia","GlobalAreaPie","props","chartRef","React","createRef","ref","this","dibujar","globalData","myChartRef","current","getContext","global_data","Component","AreaGlobal","prop","state","forEach","element","setState","Estadisticas","class","data-toggle","href","ComparadorPaises","App","expand","light","bg","Brand","Toggler","navbar","Nav","mr","Item","to","dropdown","Link","dropdownToggle","Menu","Divider","exact","path","component","orange","grey","ReactDOM","render","StrictMode"],"mappings":"uOAKaA,EAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAAgB,EAI7BC,mBAAS,IAJoB,mBAIhDC,EAJgD,KAIzCC,EAJyC,KAwFvD,OAlFAC,qBAAU,WACW,KAAfJ,GACFK,IAAMC,IAAN,kDAC6CN,EAD7C,iBAGCO,MAAK,SAACC,GACL,IAAIC,EAAoBC,OAAOC,KAAKH,EAAII,KAAKC,SAASC,OACtDL,EAAoBA,EAAkBM,KAAI,SAAUC,GAClD,IAAIC,EAASD,EAAEE,MAAM,KACrB,OAAOD,EAAO,GAAK,IAAMA,EAAO,GAAK,IAAMA,EAAO,MAGpD,IAAIE,EAAoBT,OAAOU,OAAOZ,EAAII,KAAKC,SAASC,OACpDO,EAAsBX,OAAOU,OAAOZ,EAAII,KAAKC,SAASS,QACtDC,EAA6Bb,OAAOU,OACtCZ,EAAII,KAAKC,SAASW,WAGhBC,EAAS,CACXC,KAAM,OACNd,KAAM,CACJe,OAAQlB,EACRmB,SAAU,CACR,CACEC,MAAO,QACPC,gBAAiBC,OAAOC,YAAYC,IACpCC,YAAaH,OAAOC,YAAYC,IAChCE,MAAM,EACNvB,KAAMO,GAER,CACEU,MAAO,UACPC,gBAAiBC,OAAOC,YAAYI,OACpCF,YAAaH,OAAOC,YAAYI,OAChCD,MAAM,EACNvB,KAAMS,GAER,CACEQ,MAAO,iBACPC,gBAAiBC,OAAOC,YAAYK,MACpCH,YAAaH,OAAOC,YAAYK,MAChCF,MAAM,EACNvB,KAAMW,KAIZe,QAAS,CACPC,YAAY,EACZC,MAAO,CACLC,SAAS,EACTC,KAAK,gCAAD,OAAkClC,EAAII,KAAK+B,UAEjDC,OAAQ,CACNC,MAAO,CACL,CACEJ,SAAS,IAGbK,MAAO,CACL,CACEL,SAAS,OAQfvC,EAAM6C,eAAe,YACvB7C,EAAM8C,UAER,IAAIC,EAAMC,SAASC,eAAe,YAClChD,EAAS,IAAIiD,IAAMH,EAAKxB,SAG3B,CAAC1B,EAAYC,IAQZ,kBAAC,OAAD,KACI,kBAAC,OAAKqD,KAAN,KACI,kDAAuB,2BAAItD,IAC3B,6BACI,4BAAQuD,GAAG,iBC3ChBC,EAnDC,YAA6B,IAAnBC,EAAkB,EAAlBA,iBAwCtB,OApCApD,qBAAU,WAEN,IAAIqD,EAAOP,SAASC,eAAe,YAE/BO,EAAU,CACVhC,KAAM,MACNd,KAAM,CACJgB,SAAU,CAAC,CACThB,KAAM,CACJ4C,EAAiB1C,MACjB0C,EAAiBhC,UACjBgC,EAAiBlC,QAEnBQ,gBAAiB,CACfC,OAAOC,YAAY2B,KACnB5B,OAAOC,YAAY4B,OACnB7B,OAAOC,YAAYC,KAErBJ,MAAO,WAETF,OAAQ,CACN,SAAU6B,EAAiB1C,MAC3B,eAAgB0C,EAAiBhC,UACjC,cAAegC,EAAiBlC,SAGpCgB,QAAS,CACPC,YAAY,IAIlB,IAAIa,IAAMK,EAAMC,MAMhB,kBAAC,OAAD,KACI,kBAAC,OAAKL,KAAN,KACI,6BACI,4BAAQC,GAAG,iB,iBCpBhBO,EAtBE,SAAC,GAAuB,IAAtBL,EAAqB,EAArBA,iBAEf,OACI,kBAAC,OAAD,KACI,kBAAC,OAAKH,KAAN,KACI,kBAAC,MAAD,KACI,yBAAKS,IAAKN,EAAiBO,YAAYC,KAAMC,OAAO,KAAKC,MAAM,KAAKC,IAAI,KAD5E,qBAEuBX,EAAiBb,SAExC,sDAA2B,kBAAC,IAAD,CAAQyB,OAAO,cAAcZ,EAAiBa,UACzE,mDAAwB,2BAAIb,EAAiB1C,QAC7C,oDAAyB,2BAAI0C,EAAiBhC,YAC9C,mDAAwB,2BAAIgC,EAAiBlC,SAC7C,oDAA0BkC,EAAiBc,YAC3C,sDAA4Bd,EAAiBe,QAC7C,8CAAoBf,EAAiBgB,a,iBCsItCC,EAlJa,WAAK,IAAD,EAEoBxE,mBAAS,CACrDoE,QAAS,EACTvD,MAAO,EACPwD,WAAY,EACZhD,OAAQ,EACRoD,YAAa,EACblD,UAAW,EACX+C,OAAQ,EACRC,SAAU,EACVG,mBAAoB,EACpBC,oBAAqB,EACrBC,MAAO,EACPC,mBAAoB,EACpBC,kBAAmB,EACnBpC,QAAS,GACToB,YAAY,GACZ/D,WAAW,KAlBa,mBAErBwD,EAFqB,KAEHwB,EAFG,OA6BA/E,mBAAS,IA7BT,mBA6BrBgF,EA7BqB,KA6BbC,EA7Ba,KA+B5B9E,qBAAU,WACNC,IAAMC,IAAI,wCAAwCC,MAAK,SAAAC,GAEnD0E,EAAU1E,EAAII,WAGpB,IA4DF,OACE,oCACE,kBAAC,MAAD,CAAKuE,GAAG,QACN,kBAAC,MAAD,CAAKC,IAAI,QAAQ1C,KAAK,UACpB,oDAGJ,kBAAC,MAAD,CAAKyC,GAAG,QACN,kBAAC,MAAD,KACE,4BACEE,aAAc,UACdC,UAAU,eACVhC,GAAG,4BACHiC,SAAU,SAACC,IA3DC,SAACA,GAEnB,IAAIC,EAAOD,EAAEE,OAAOC,MAEV,KAAPF,EACCpF,IAAMC,IAAI,0CAA4CmF,GAAMlF,MAAK,SAAAC,GAE7DwE,EAAoB,eAAKxE,EAAII,KAAV,CAAgBZ,WAAYyF,QAEhDG,OAAM,SAAAC,GAEFA,EAAMC,SAASC,OACdC,MAAM,kCAENA,MAAM,YAOdhB,EAAoB,CAChBX,QAAS,EACTvD,MAAO,EACPwD,WAAY,EACZhD,OAAQ,EACRoD,YAAa,EACblD,UAAW,EACX+C,OAAQ,EACRC,SAAU,EACVG,mBAAoB,EACpBC,oBAAqB,EACrBC,MAAO,EACPC,mBAAoB,EACpBC,kBAAmB,EACnBpC,QAAS,GACToB,YAAY,GACZ/D,WAAW,KAuBXiG,CAAcT,KAGhB,4BAAQG,MAAM,UAAUO,UAAQ,GAAhC,cAGCjB,EAAOlE,KAAI,SAAC0E,GAAD,OACV,4BAAQU,IAAKC,MAAQT,MAAOF,EAAKzF,YAC9ByF,EAAKY,YAMhB,kBAAC,MAAD,CAAKlB,GAAG,QACN,kBAAC,MAAD,CAAKC,IAAI,QACP,kBAAC,EAAD,CAAU5B,iBAAkBA,KAG9B,kBAAC,MAAD,CAAK4B,IAAI,QACP,kBAAC,EAAD,CAAS5B,iBAAkBA,MAG/B,kBAAC,MAAD,CAAK2B,GAAG,QACN,kBAAC,MAAD,CAAKC,IAAI,SACP,kBAAC,EAAD,CACErF,WAAYyD,EAAiBb,QAC7B3C,WAAYwD,EAAiBxD,iBClC5BsG,EArGM,WAAW,IAAD,EAKDrG,mBAAS,CACnC,QAAW,cACX,QAAW,GACX,YAAe,CACb,IAAO,EACP,KAAQ,GACR,KAAQ,GACR,IAAO,EACP,KAAQ,EACR,KAAQ,IAEV,MAAS,EACT,WAAc,EACd,OAAU,EACV,YAAe,EACf,UAAa,EACb,OAAU,EACV,SAAY,EACZ,mBAAsB,EACtB,oBAAuB,EACvB,MAAS,EACT,mBAAsB,IA1BK,mBAKtBsG,EALsB,KAKdC,EALc,KAqE7B,OAxCApG,qBAAU,WACRC,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GAE3DgG,EAAUhG,EAAII,MAKpB,IAAI6F,EAAOvD,SAASC,eAAe,cAE7B,IAAIC,IAAMqD,EAAM,CACd/E,KAAM,gBACNd,KAAM,CACJe,OAAQ,CAAC,UAAD,OACInB,EAAII,KAAKE,MADb,2BAESN,EAAII,KAAKU,OAFlB,4BAGUd,EAAII,KAAKY,UAHnB,MAKRI,SAAU,CACR,CACEC,MAAO,CAAC,WACRjB,KAAM,CAACJ,EAAII,KAAKE,MAAON,EAAII,KAAKU,OAAQd,EAAII,KAAKY,WACjDW,MAAM,EACNL,gBAAiB,CACfC,OAAOC,YAAYC,IACnBF,OAAOC,YAAYI,OACnBL,OAAOC,YAAYK,iBAY/B,IAGE,oCACE,kBAAC,MAAD,CAAK8C,GAAG,QACN,kBAAC,MAAD,CAAKC,IAAI,QAAQ1C,KAAK,UACpB,mDAGJ,kBAAC,MAAD,CAAKyC,GAAG,QAEN,kBAAC,MAAD,CAAKC,IAAI,QAEP,kBAAC,OAAD,KACE,kBAAC,OAAK/B,KAAN,KACI,kBAAC,MAAD,2BAAwB,kBAAC,IAAD,CAAQe,OAAO,cAAcmC,EAAOlC,SAA5D,KACA,4BAAQf,GAAG,kBAMnB,kBAAC,MAAD,CAAK8B,IAAI,QACP,kBAAC,EAAD,CACE5B,iBAAkB+C,QCRjBG,EA1FE,WA0Eb,OAxEAtG,qBAAU,WAENC,IAAMC,IAAI,2DAA2DC,MAAK,SAAAC,GAGtE,IAAIC,EAAoBC,OAAOC,KAAKH,EAAII,KAAKC,SAASC,OACtDL,EAAoBA,EAAkBM,KAAI,SAASC,GAC/C,IAAIC,EAASD,EAAEE,MAAM,KACrB,OAAOD,EAAO,GAAG,IAAIA,EAAO,GAAG,IAAIA,EAAO,MAI9C,IAAIE,EAAoBT,OAAOU,OAAOZ,EAAII,KAAKC,SAASC,OACpDO,EAAsBX,OAAOU,OAAOZ,EAAII,KAAKC,SAASS,QACtDC,EAA6Bb,OAAOU,OAAOZ,EAAII,KAAKC,SAASW,WAG7DC,EAAS,CACTC,KAAM,OACNd,KAAM,CACFe,OAAQlB,EACRmB,SAAU,CACN,CACIC,MAAO,QACPC,gBAAiBC,OAAOC,YAAYC,IACpCC,YAAaH,OAAOC,YAAYC,IAChCE,MAAM,EACNvB,KAAMO,GAEV,CACIU,MAAO,UACPC,gBAAiBC,OAAOC,YAAYI,OACpCF,YAAaH,OAAOC,YAAYI,OAChCD,MAAM,EACNvB,KAAMS,GAEV,CACIQ,MAAO,iBACPC,gBAAiBC,OAAOC,YAAYK,MACpCH,YAAaH,OAAOC,YAAYK,MAChCF,MAAM,EACNvB,KAAMW,KAIlBe,QAAS,CACLC,YAAY,EACZC,MAAO,CACHC,SAAS,EACTC,KAAK,gCAAD,OAAkClC,EAAII,KAAK+B,UAEnDC,OAAQ,CACJC,MAAO,CAAC,CACJJ,SAAS,IAEbK,MAAO,CAAC,CACJL,SAAS,OAOrBQ,EAAMC,SAASC,eAAe,aAElC,IAAIC,IAAMH,EAAKxB,QAKrB,IAGE,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAK2D,IAAI,SACL,kBAAC,OAAD,KACI,kBAAC,OAAK/B,KAAN,KACI,0DACA,6BACI,4BAAQC,GAAG,oBCvExBqD,EAXK,WAEhB,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,gCCiEGC,E,kDAnEb,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAGVC,SAAWC,IAAMC,YAJC,E,kGAYhB,OACE,kBAAC,OAAD,KACI,kBAAC,OAAK3D,KAAN,KACI,6BACI,4BAAQC,GAAG,UAAU2D,IAAKC,KAAKJ,gB,2CAU7C,IAAMrF,EAASyF,KAAKC,QAAQD,KAAKL,MAAMO,YACjCC,EAAaH,KAAKJ,SAASQ,QAAQC,WAAW,MACpD,IAAInE,IAAMiE,EAAY5F,K,8BAIhBb,GAEN,IAAM4G,EAAc5G,EA4BpB,MA1Be,CACbc,KAAM,MACNd,KAAM,CACJgB,SAAU,CAAC,CACThB,KAAM,CACJ4G,EAAY1G,MACZ0G,EAAYhG,UACZgG,EAAYlG,QAEdQ,gBAAiB,CACfC,OAAOC,YAAY2B,KACnB5B,OAAOC,YAAY4B,OACnB7B,OAAOC,YAAYC,KAErBJ,MAAO,WAETF,OAAQ,CACN,SAAU6F,EAAY1G,MACtB,eAAgB0G,EAAYhG,UAC5B,cAAegG,EAAYlG,SAG/BgB,QAAS,CACPC,YAAY,Q,GA7DQkF,aCwHbC,E,kDAnHX,WAAYC,GAAM,IAAD,8BACb,cAAMA,IAEDC,MAAQ,CACXvD,QAAS,EACTvD,MAAO,EACPwD,WAAY,EACZhD,OAAQ,EACRoD,YAAa,EACblD,UAAW,EACX+C,OAAQ,EACRC,SAAU,EACVG,mBAAoB,EACpBC,oBAAqB,EACrBC,MAAO,EACPC,mBAAoB,EACpBC,kBAAmB,GAhBR,E,gEAqBI,IAAD,OAElB1E,IAAMC,IAAI,2CAA2CC,MAAK,SAAAC,GAIxD,IAAI6D,EAAS,EACTvD,EAAO,EACPwD,EAAY,EACZhD,EAAQ,EACRoD,EAAa,EACblD,EAAW,EACX+C,EAAQ,EACRC,EAAU,EACVG,EAAoB,EACpBC,EAAqB,EACrBC,EAAO,EACPC,EAAoB,EACpBC,EAAmB,EAEvBvE,EAAII,KAAKiH,SAAQ,SAAAC,GACfzD,EAAUyD,EAAQzD,QAClBvD,GAAagH,EAAQhH,MACrBwD,GAAuBwD,EAAQxD,WAC/BhD,GAAewG,EAAQxG,OACvBoD,GAAyBoD,EAAQpD,YACjClD,GAAqBsG,EAAQtG,UAC7B+C,GAAeuD,EAAQvD,OACvBC,GAAmBsD,EAAQtD,SAC3BG,GAAuCmD,EAAQnD,mBAC/CC,GAAyCkD,EAAQlD,oBACjDC,GAAaiD,EAAQjD,MACrBC,GAAuCgD,EAAQhD,mBAC/CC,GAAqC+C,EAAQ/C,qBAI/C,EAAKgD,SAAS,CACZ,QAAW1D,EACX,MAASvD,EACT,WAAcwD,EACd,OAAUhD,EACV,YAAeoD,EACf,UAAalD,EACb,OAAU+C,EACV,SAAYC,EACZ,mBAAsBG,EACtB,oBAAuBC,EACvB,MAASC,EACT,mBAAsBC,EACtB,kBAAqBC,S,+BAUvB,OACE,oCACE,kBAAC,MAAD,CAAKI,GAAG,QACN,kBAAC,MAAD,CAAKzC,KAAK,UACR,iDAIJ,kBAAC,MAAD,CAAKyC,GAAG,QACN,kBAAC,MAAD,CAAKC,IAAI,QACP,kBAAC,OAAD,KACI,kBAAC,OAAK/B,KAAN,KACA,oDACA,sDAA2B,kBAAC,IAAD,CAAQe,OAAO,cAAc8C,KAAKU,MAAMvD,UACnE,mDAAwB,2BAAI6C,KAAKU,MAAM9G,QACvC,oDAAyB,2BAAIoG,KAAKU,MAAMpG,YACxC,mDAAwB,2BAAI0F,KAAKU,MAAMtG,SACvC,oDAA0B4F,KAAKU,MAAMtD,YACrC,sDAA4B4C,KAAKU,MAAMrD,QACvC,8CAAoB2C,KAAKU,MAAMpD,aAKrC,kBAAC,MAAD,CAAKY,IAAI,QACH,kBAAC,EAAD,CAAegC,WAAYF,KAAKU,e,GA5G3BH,aCgCVO,EAjCM,WAEjB,OACE,kBAAC,YAAD,KAEE,wBAAIC,MAAM,gBACN,wBAAIA,MAAM,YACV,uBAAGA,MAAM,kBAAkBC,cAAY,MAAMC,KAAK,SAAlD,mBAEA,wBAAIF,MAAM,YACV,uBAAGA,MAAM,WAAWC,cAAY,MAAMC,KAAK,UAA3C,YAEA,wBAAIF,MAAM,YACV,uBAAGA,MAAM,WAAWC,cAAY,MAAMC,KAAK,UAA3C,cAIJ,yBAAK7C,UAAU,eACX,yBAAKhC,GAAG,OAAOgC,UAAU,6BACzB,kBAAC,EAAD,OAEA,yBAAKhC,GAAG,QAAQgC,UAAU,2BAC1B,kBAAC,EAAD,OAEA,yBAAKhC,GAAG,QAAQgC,UAAU,2BAC1B,kBAAC,EAAD,U,gBCxBG8C,EANU,WAErB,OACI,sCCsDOC,MA/Cf,WAIE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQC,OAAO,KAAKC,OAAK,EAACC,GAAG,SAC3B,kBAAC,SAAOC,MAAR,CAAcN,KAAK,KAAI,yDACvB,kBAAC,SAAOO,QAAR,CAAgBhD,OAAO,4BACvB,kBAAC,WAAD,CAAUiD,QAAM,EAACrF,GAAG,0BAClB,kBAAC,SAAOsF,IAAR,CAAYC,GAAG,QACb,kBAAC,MAAIC,KAAL,CAAUvE,QAAM,GACZ,kBAAC,IAAD,CAAMwE,GAAG,IAAIzD,UAAU,YAAvB,WAEJ,kBAAC,MAAIwD,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,cAAczD,UAAU,YAAjC,eAEJ,kBAAC,MAAIwD,KAAL,CAAUE,UAAQ,GAChB,kBAAC,MAAIC,KAAL,CAAUC,gBAAc,GAAxB,YACA,kBAAC,WAASC,KAAV,KACE,kBAAC,WAASL,KAAV,eACA,kBAAC,WAASA,KAAV,uBACA,kBAAC,WAASM,QAAV,MACA,kBAAC,WAASN,KAAV,4BASV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAcC,UAAWnB,QC5CrDrG,OAAOC,YAAc,CACnBC,IAAK,oBACLuH,OAAQ,oBACR5F,OAAQ,oBACRvB,MAAO,oBACPsB,KAAM,oBACNvB,OAAQ,qBACRqH,KAAM,sBAIRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1G,SAASC,eAAe,U","file":"static/js/main.14ca7c84.chunk.js","sourcesContent":["import React, { useEffect,useState } from 'react';\r\nimport { Card } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Chart from \"chart.js\";\r\n\r\nexport const TimelineCard = ({ nombrePais, alpha3Code}) => {\r\n\r\n    \r\n\r\n    const [chart, setChart] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      if (alpha3Code !== \"\") {\r\n        Axios.get(\r\n          `https://corona.lmao.ninja/v2/historical/${alpha3Code}?lastdays=30`\r\n        )\r\n        .then((res) => {\r\n          let arregloFechaCasos = Object.keys(res.data.timeline.cases);\r\n          arregloFechaCasos = arregloFechaCasos.map(function (d) {\r\n            let arrayD = d.split(\"/\");\r\n            return arrayD[1] + \"/\" + arrayD[0] + \"/\" + arrayD[2];\r\n          });\r\n\r\n          let arregloDatosCasos = Object.values(res.data.timeline.cases);\r\n          let arregloDatosMuertes = Object.values(res.data.timeline.deaths);\r\n          let arregloDatosRecuperaciones = Object.values(\r\n            res.data.timeline.recovered\r\n          );\r\n\r\n          var config = {\r\n            type: \"line\",\r\n            data: {\r\n              labels: arregloFechaCasos,\r\n              datasets: [\r\n                {\r\n                  label: \"Casos\",\r\n                  backgroundColor: window.chartColors.red,\r\n                  borderColor: window.chartColors.red,\r\n                  fill: false,\r\n                  data: arregloDatosCasos,\r\n                },\r\n                {\r\n                  label: \"Muertes\",\r\n                  backgroundColor: window.chartColors.purple,\r\n                  borderColor: window.chartColors.purple,\r\n                  fill: false,\r\n                  data: arregloDatosMuertes,\r\n                },\r\n                {\r\n                  label: \"Recuperaciones\",\r\n                  backgroundColor: window.chartColors.green,\r\n                  borderColor: window.chartColors.green,\r\n                  fill: false,\r\n                  data: arregloDatosRecuperaciones,\r\n                },\r\n              ],\r\n            },\r\n            options: {\r\n              responsive: true,\r\n              title: {\r\n                display: true,\r\n                text: `Linea de tiempo del covid en ${res.data.country}`,\r\n              },\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    display: true,\r\n                  },\r\n                ],\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    // type: 'logarithmic',\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          };\r\n\r\n          if (chart.hasOwnProperty(\"destroy\")) {\r\n            chart.destroy();\r\n          }\r\n          let ctx = document.getElementById(\"myChart5\");\r\n          setChart(new Chart(ctx, config));\r\n        })\r\n      } \r\n    }, [nombrePais, alpha3Code]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h5>Linea de tiempo de <b>{nombrePais}</b></h5>\r\n                <div>\r\n                    <canvas id=\"myChart5\" />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Card } from 'bootstrap-4-react';\r\nimport Chart from \"chart.js\";\r\n\r\nconst PieCard = function({paisSeleccionado}){\r\n\r\n    \r\n\r\n    useEffect(function(){\r\n\r\n        let ctx1 = document.getElementById(\"myChart7\");\r\n\r\n        var config1 = {\r\n            type: 'pie',\r\n            data: {\r\n              datasets: [{\r\n                data: [\r\n                  paisSeleccionado.cases,\r\n                  paisSeleccionado.recovered,\r\n                  paisSeleccionado.deaths,\r\n                ],\r\n                backgroundColor: [\r\n                  window.chartColors.blue,\r\n                  window.chartColors.yellow,\r\n                  window.chartColors.red,\r\n                ],\r\n                label: 'Global'\r\n              }],\r\n              labels: [\r\n                'Casos '+ paisSeleccionado.cases,\r\n                'Recuperados '+ paisSeleccionado.recovered,\r\n                'Fallecidos '+ paisSeleccionado.deaths,\r\n              ]\r\n            },\r\n            options: {\r\n              responsive: true\r\n            }\r\n        };  \r\n          \r\n        new Chart(ctx1, config1);\r\n          \r\n\r\n    });\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <div>\r\n                    <canvas id=\"myChart7\" />\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PieCard","import React from 'react'\r\nimport Moment from \"react-moment\";\r\nimport { Card, BH5 } from 'bootstrap-4-react';\r\n\r\n\r\n\r\nconst InfoCard = ({paisSeleccionado}) =>{\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <BH5>\r\n                    <img src={paisSeleccionado.countryInfo.flag} heigth=\"30\" width=\"30\" alt=''/>\r\n                    Datos actuales de {paisSeleccionado.country} \r\n                </BH5>\r\n                <p>Fecha de actualizacion: <Moment format=\"DD/MM/YYYY\">{paisSeleccionado.updated}</Moment></p>\r\n                <p>Casos nivel mundial: <b>{paisSeleccionado.cases}</b></p>\r\n                <p>Total de recuperados: <b>{paisSeleccionado.recovered}</b></p>\r\n                <p>Total de fallecidos: <b>{paisSeleccionado.deaths}</b></p>\r\n                <p>Casos del dia de hoy: {paisSeleccionado.todayCases}</p>\r\n                <p>Total de casos activos: {paisSeleccionado.active}</p>\r\n                <p>Casos criticos: {paisSeleccionado.critical}</p>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default InfoCard;","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport { TimelineCard } from '../atoms/TimelineCard';\r\nimport PieCard from '../atoms/PieCard';\r\nimport InfoCard from '../atoms/InfoCard';\r\nimport uuid from 'react-uuid'\r\n// import { TimelineCardNew } from '../atoms/TimelineCardNew';\r\n\r\nconst AreaMultiplesPaises = ()=>{\r\n\r\n    const [paisSeleccionado, setPaisSeleccionado] = useState({\r\n        updated: 0,\r\n        cases: 0,\r\n        todayCases: 0,\r\n        deaths: 0,\r\n        todayDeaths: 0,\r\n        recovered: 0,\r\n        active: 0,\r\n        critical: 0,\r\n        casesPerOneMillion: 0,\r\n        deathsPerOneMillion: 0,\r\n        tests: 0,\r\n        testsPerOneMillion: 0,\r\n        affectedCountries: 0,\r\n        country: '',\r\n        countryInfo:{},\r\n        alpha3Code:''\r\n    });\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [paises, setPaises] = useState([])\r\n\r\n    useEffect(()=>{\r\n        Axios.get(\"https://restcountries.eu/rest/v2/all\").then(res => {\r\n\r\n            setPaises(res.data);\r\n            \r\n        });\r\n    },[]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const cambiandoPais = (e)=>{\r\n        \r\n        let pais = e.target.value;\r\n\r\n        if(pais!==''){\r\n            Axios.get(\"https://corona.lmao.ninja/v2/countries/\" + pais).then(res => {\r\n    \r\n                setPaisSeleccionado({ ...res.data, alpha3Code: pais});\r\n                \r\n            }).catch(error => {\r\n                \r\n                if(error.response.status){\r\n                    alert(\"No existe datos para este pais\");\r\n                }else{\r\n                    alert(\"Error\");\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }else{\r\n            setPaisSeleccionado({\r\n                updated: 0,\r\n                cases: 0,\r\n                todayCases: 0,\r\n                deaths: 0,\r\n                todayDeaths: 0,\r\n                recovered: 0,\r\n                active: 0,\r\n                critical: 0,\r\n                casesPerOneMillion: 0,\r\n                deathsPerOneMillion: 0,\r\n                tests: 0,\r\n                testsPerOneMillion: 0,\r\n                affectedCountries: 0,\r\n                country: '',\r\n                countryInfo:{},\r\n                alpha3Code:''\r\n            });\r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Row my=\"md-3\">\r\n          <Col col=\"md-12\" text=\"center\">\r\n            <h2>Seleccione el pais</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row my=\"md-3\">\r\n          <Col>\r\n            <select\r\n              defaultValue={\"DEFAULT\"}\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlSelect2\"\r\n              onChange={(e) => {\r\n                cambiandoPais(e);\r\n              }}\r\n            >\r\n              <option value=\"DEFAULT\" disabled>\r\n                Seleccione\r\n              </option>\r\n              {paises.map((pais) => (\r\n                <option key={uuid()} value={pais.alpha3Code}>\r\n                  {pais.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <Row my=\"md-3\">\r\n          <Col col=\"md-4\">\r\n            <InfoCard paisSeleccionado={paisSeleccionado}></InfoCard>\r\n          </Col>\r\n\r\n          <Col col=\"md-8\">\r\n            <PieCard paisSeleccionado={paisSeleccionado}></PieCard>\r\n          </Col>\r\n        </Row>\r\n        <Row my=\"md-3\">\r\n          <Col col=\"md-12\">\r\n            <TimelineCard\r\n              nombrePais={paisSeleccionado.country}\r\n              alpha3Code={paisSeleccionado.alpha3Code}\r\n            ></TimelineCard>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AreaMultiplesPaises;","import React, { useState, useEffect } from 'react';\r\nimport {Row, Col, Card, BH5} from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Chart from \"chart.js\";\r\nimport Moment from \"react-moment\";\r\nimport InfoCard from './InfoCard';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SpecificArea = function(){\r\n\r\n  \r\n\r\n\r\n  const [myData, setMyData] = useState({\r\n    \"updated\": 1587044800696,\r\n    \"country\": \"\",\r\n    \"countryInfo\": {\r\n      \"_id\": 0,\r\n      \"iso2\": \"\",\r\n      \"iso3\": \"\",\r\n      \"lat\": 0,\r\n      \"long\": 0,\r\n      \"flag\": \"\"\r\n    },\r\n    \"cases\": 0,\r\n    \"todayCases\": 0,\r\n    \"deaths\": 0,\r\n    \"todayDeaths\": 0,\r\n    \"recovered\": 0,\r\n    \"active\": 0,\r\n    \"critical\": 0,\r\n    \"casesPerOneMillion\": 0,\r\n    \"deathsPerOneMillion\": 0,\r\n    \"tests\": 0,\r\n    \"testsPerOneMillion\": 0\r\n  });\r\n\r\n  useEffect(()=>{\r\n    Axios.get(\"https://corona.lmao.ninja/v2/countries/BOL\").then(res => {\r\n\r\n      setMyData(res.data);\r\n      \r\n      \r\n\r\n\r\nlet ctx9 = document.getElementById(\"myChart231\");\r\n      \r\n      new Chart(ctx9, {\r\n        type: \"horizontalBar\",\r\n        data: {\r\n          labels: [\r\n            `Casos (${res.data.cases})`,\r\n            `Fallecidos (${res.data.deaths})`,\r\n            `Recuperados (${res.data.recovered})`,\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: [\"Bolivia\"],\r\n              data: [res.data.cases, res.data.deaths, res.data.recovered],\r\n              fill: false,\r\n              backgroundColor: [\r\n                window.chartColors.red,\r\n                window.chartColors.purple,\r\n                window.chartColors.green,\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n\r\n\r\n      \r\n\r\n    });\r\n  },[]);\r\n  \r\n  return (\r\n      <>\r\n        <Row my=\"md-3\">\r\n          <Col col=\"md-12\" text=\"center\">\r\n            <h2>Datos en Bolivia.</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row my=\"md-3\">\r\n          \r\n          <Col col=\"md-8\">\r\n            \r\n            <Card>\r\n              <Card.Body>\r\n                  <BH5>Cuadro de la fecha <Moment format=\"DD/MM/YYYY\">{myData.updated}</Moment> </BH5>\r\n                  <canvas id=\"myChart231\" />\r\n              </Card.Body>\r\n            </Card>\r\n\r\n          </Col>\r\n\r\n          <Col col=\"md-4\">\r\n            <InfoCard\r\n              paisSeleccionado={myData}\r\n            />\r\n          </Col>\r\n\r\n        </Row>\r\n      </>\r\n  );\r\n\r\n}\r\n\r\nexport default SpecificArea;    ","import React, { useEffect } from 'react';\r\nimport { Row, Col, Card } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Chart from \"chart.js\";\r\n\r\nconst Timeline = function(){\r\n\r\n    useEffect(()=>{  \r\n\r\n        Axios.get(\"https://corona.lmao.ninja/v2/historical/BOL?lastdays=30\").then(res=>{ \r\n\r\n\r\n            let arregloFechaCasos = Object.keys(res.data.timeline.cases);\r\n            arregloFechaCasos = arregloFechaCasos.map(function(d) {\r\n                let arrayD = d.split('/');\r\n                return arrayD[1]+'/'+arrayD[0]+'/'+arrayD[2];\r\n            });\r\n\r\n\r\n            let arregloDatosCasos = Object.values(res.data.timeline.cases);\r\n            let arregloDatosMuertes = Object.values(res.data.timeline.deaths);\r\n            let arregloDatosRecuperaciones = Object.values(res.data.timeline.recovered);\r\n\r\n            \r\n            var config = {\r\n                type: 'line',\r\n                data: {\r\n                    labels: arregloFechaCasos,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Casos',\r\n                            backgroundColor: window.chartColors.red,\r\n                            borderColor: window.chartColors.red,\r\n                            fill: false,\r\n                            data: arregloDatosCasos,\r\n                        }, \r\n                        {\r\n                            label: 'Muertes',\r\n                            backgroundColor: window.chartColors.purple,\r\n                            borderColor: window.chartColors.purple,\r\n                            fill: false,\r\n                            data: arregloDatosMuertes,\r\n                        },\r\n                        {\r\n                            label: 'Recuperaciones',\r\n                            backgroundColor: window.chartColors.green,\r\n                            borderColor: window.chartColors.green,\r\n                            fill: false,\r\n                            data: arregloDatosRecuperaciones,\r\n                        },\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    title: {\r\n                        display: true,\r\n                        text: `Linea de tiempo del covid en ${res.data.country}`\r\n                    },\r\n                    scales: {\r\n                        xAxes: [{\r\n                            display: true,\r\n                        }],\r\n                        yAxes: [{\r\n                            display: true,\r\n                            // type: 'logarithmic',\r\n                        }]\r\n                    }\r\n                }\r\n            };\r\n            \r\n            let ctx = document.getElementById(\"myChart31\");\r\n            \r\n            new Chart(ctx, config);\r\n        \r\n        \r\n        });\r\n\r\n    },[]);\r\n\r\n    return (\r\n        <Row>\r\n            <Col col=\"md-12\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <h5>Linea de tiempo de Bolivia</h5>\r\n                        <div>\r\n                            <canvas id=\"myChart31\" />\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Timeline;","import React from 'react'\r\nimport SpecificArea from '../atoms/SpecificArea';\r\nimport Timeline from '../atoms/Timeline';\r\n\r\nconst AreaBolivia = ()=>{\r\n\r\n    return (\r\n        <>\r\n            <SpecificArea></SpecificArea>\r\n            <Timeline></Timeline>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AreaBolivia;","import React, { Component } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { Card } from 'bootstrap-4-react';\r\n\r\n\r\nclass GlobalAreaPie extends Component{\r\n  \r\n  constructor(props){\r\n      super(props);\r\n  }\r\n    \r\n  chartRef = React.createRef();\r\n  \r\n  componentDidMount() {\r\n    \r\n  }\r\n    \r\n  render() {\r\n\r\n    return (\r\n      <Card>\r\n          <Card.Body>\r\n              <div>\r\n                  <canvas id=\"myChart\" ref={this.chartRef}/>\r\n              </div>\r\n          </Card.Body>\r\n      </Card>\r\n    );\r\n\r\n  }\r\n\r\n  componentDidUpdate(){\r\n\r\n    const config = this.dibujar(this.props.globalData);\r\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n    new Chart(myChartRef, config);\r\n\r\n  }\r\n\r\n  dibujar(data){\r\n    \r\n    const global_data = data;\r\n\r\n    const config = {\r\n      type: 'pie',\r\n      data: {\r\n        datasets: [{\r\n          data: [\r\n            global_data.cases,\r\n            global_data.recovered,\r\n            global_data.deaths,\r\n          ],\r\n          backgroundColor: [\r\n            window.chartColors.blue,\r\n            window.chartColors.yellow,\r\n            window.chartColors.red,\r\n          ],\r\n          label: 'Global'\r\n        }],\r\n        labels: [\r\n          'Casos '+ global_data.cases,\r\n          'Recuperados '+ global_data.recovered,\r\n          'Fallecidos '+ global_data.deaths,\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true\r\n      }\r\n    };\r\n    return config;\r\n  }\r\n\r\n}\r\n\r\nexport default GlobalAreaPie;","import React, { Component } from 'react';\r\nimport { Row, Col, Card } from 'bootstrap-4-react';\r\nimport Axios from 'axios';\r\nimport Moment from \"react-moment\";\r\nimport GlobalAreaPie from '../atoms/GlobalAreaPie';\r\n\r\n\r\n\r\nclass AreaGlobal extends Component{\r\n\r\n    constructor(prop){\r\n        super(prop);\r\n\r\n        this.state = {\r\n          updated: 0,\r\n          cases: 0,\r\n          todayCases: 0,\r\n          deaths: 0,\r\n          todayDeaths: 0,\r\n          recovered: 0,\r\n          active: 0,\r\n          critical: 0,\r\n          casesPerOneMillion: 0,\r\n          deathsPerOneMillion: 0,\r\n          tests: 0,\r\n          testsPerOneMillion: 0,\r\n          affectedCountries: 0,\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n      Axios.get(\"https://corona.lmao.ninja/v2/continents\").then(res => {\r\n\r\n             \r\n\r\n        var updated= 0;\r\n        var cases= 0;\r\n        var todayCases= 0;\r\n        var deaths= 0;\r\n        var todayDeaths= 0;\r\n        var recovered= 0;\r\n        var active= 0;\r\n        var critical= 0;\r\n        var casesPerOneMillion= 0;\r\n        var deathsPerOneMillion= 0;\r\n        var tests= 0;\r\n        var testsPerOneMillion= 0;\r\n        var affectedCountries= 0;\r\n\r\n        res.data.forEach(element => {\r\n          updated = element.updated;\r\n          cases= cases+element.cases;\r\n          todayCases= todayCases+element.todayCases;\r\n          deaths= deaths+element.deaths;\r\n          todayDeaths= todayDeaths+element.todayDeaths;\r\n          recovered= recovered+element.recovered;\r\n          active= active+element.active;\r\n          critical= critical+element.critical;\r\n          casesPerOneMillion= casesPerOneMillion+element.casesPerOneMillion;\r\n          deathsPerOneMillion= deathsPerOneMillion+element.deathsPerOneMillion;\r\n          tests= tests+element.tests;\r\n          testsPerOneMillion= testsPerOneMillion+element.testsPerOneMillion;\r\n          affectedCountries= affectedCountries+element.affectedCountries;\r\n\r\n        }); \r\n        \r\n        this.setState({\r\n          'updated': updated,\r\n          'cases': cases,\r\n          'todayCases': todayCases,\r\n          'deaths': deaths,\r\n          'todayDeaths': todayDeaths,\r\n          'recovered': recovered,\r\n          'active': active,\r\n          'critical': critical,\r\n          'casesPerOneMillion': casesPerOneMillion,\r\n          'deathsPerOneMillion': deathsPerOneMillion,\r\n          'tests': tests,\r\n          'testsPerOneMillion': testsPerOneMillion,\r\n          'affectedCountries': affectedCountries,\r\n        });\r\n        \r\n      });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        return(\r\n          <>\r\n            <Row my=\"md-3\">\r\n              <Col text=\"center\">\r\n                <h2>Datos Globales.</h2>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row my=\"md-3\">\r\n              <Col col=\"md-4\">\r\n                <Card>\r\n                    <Card.Body>\r\n                    <h2>Datos nivel mundial.</h2>\r\n                    <p>Fecha de actualizacion: <Moment format=\"DD/MM/YYYY\">{this.state.updated}</Moment></p>\r\n                    <p>Casos nivel mundial: <b>{this.state.cases}</b></p>\r\n                    <p>Total de recuperados: <b>{this.state.recovered}</b></p>\r\n                    <p>Total de fallecidos: <b>{this.state.deaths}</b></p>\r\n                    <p>Casos del dia de hoy: {this.state.todayCases}</p>\r\n                    <p>Total de casos activos: {this.state.active}</p>\r\n                    <p>Casos criticos: {this.state.critical}</p>\r\n                    </Card.Body>\r\n                </Card>\r\n              \r\n              </Col>\r\n              <Col col=\"md-8\">\r\n                    <GlobalAreaPie globalData={this.state} />\r\n              </Col>\r\n            </Row>\r\n\r\n          </>\r\n        );\r\n    }\r\n\r\n}\r\nexport default AreaGlobal;","import React from \"react\";\r\nimport { Container } from 'bootstrap-4-react';\r\nimport AreaMultiplesPaises from \"../organisms/AreaMultiplesPaises\";\r\nimport AreaBolivia from \"../organisms/AreaBolivia\";\r\nimport AreaGlobal from \"../organisms/AreaGlobal\";\r\n\r\n\r\nconst Estadisticas = function(){\r\n\r\n    return (\r\n      <Container>\r\n\r\n        <ul class=\"nav nav-tabs\">\r\n            <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Datos Globales</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#menu1\">Bolivia</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            <a class=\"nav-link\" data-toggle=\"tab\" href=\"#menu2\">Por Pais</a>\r\n            </li>\r\n        </ul>\r\n  \r\n        <div className=\"tab-content\">\r\n            <div id=\"home\" className=\"container tab-pane active\">\r\n            <AreaGlobal></AreaGlobal>\r\n            </div>\r\n            <div id=\"menu1\" className=\"container tab-pane fade\">\r\n            <AreaBolivia></AreaBolivia>\r\n            </div>\r\n            <div id=\"menu2\" className=\"container tab-pane fade\">\r\n            <AreaMultiplesPaises></AreaMultiplesPaises>\r\n            </div>\r\n        </div>\r\n\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Estadisticas;","import React from 'react';\r\n\r\nconst ComparadorPaises = function(){\r\n    \r\n    return (\r\n        <div>hola</div>\r\n    );\r\n};\r\nexport default ComparadorPaises;","import React from \"react\";\r\nimport { Navbar, Nav, Dropdown, Collapse } from 'bootstrap-4-react';\r\nimport Estadisticas from \"./components/pages/Estadisticas\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ComparadorPaises from \"./components/pages/ComparadorPaises\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar expand=\"lg\" light bg=\"light\">\r\n          <Navbar.Brand href=\"#\"><b>ESTADISTICAS DEL COVID-19</b></Navbar.Brand>\r\n          <Navbar.Toggler target=\"#navbarSupportedContent\" />\r\n          <Collapse navbar id=\"navbarSupportedContent\">\r\n            <Navbar.Nav mr=\"auto\">\r\n              <Nav.Item active>\r\n                  <Link to=\"/\" className=\"nav-link\">Inicio</Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                  <Link to=\"/comparador\" className=\"nav-link\">Comparador</Link>\r\n              </Nav.Item>\r\n              <Nav.Item dropdown>\r\n                <Nav.Link dropdownToggle>Opciones</Nav.Link>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>Action</Dropdown.Item>\r\n                  <Dropdown.Item>Another action</Dropdown.Item>\r\n                  <Dropdown.Divider />\r\n                  <Dropdown.Item>Something else</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Nav.Item>\r\n\r\n            </Navbar.Nav>\r\n\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Estadisticas></Estadisticas>\r\n          </Route>\r\n          <Route exact path=\"/comparador\" component={ComparadorPaises}>\r\n            {/* <ComparadorPaises /> */}\r\n          </Route>\r\n        </Switch>\r\n\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nwindow.chartColors = {\r\n  red: 'rgb(255, 99, 132)',\r\n  orange: 'rgb(255, 159, 64)',\r\n  yellow: 'rgb(255, 205, 86)',\r\n  green: 'rgb(75, 192, 192)',\r\n  blue: 'rgb(54, 162, 235)',\r\n  purple: 'rgb(153, 102, 255)',\r\n  grey: 'rgb(201, 203, 207)'\r\n};\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}